<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Car Price Prediction</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #1a202c;
            color: #e2e8f0;
        }
    </style>
</head>
<body class="flex items-center justify-center min-h-screen">

<div class="bg-gray-800 p-8 rounded-2xl shadow-xl w-full max-w-2xl mx-4 overflow-y-auto max-h-screen">
    <h1 class="text-3xl font-bold text-center text-teal-400 mb-6">ðŸš— Car Price Prediction</h1>
    <p class="text-gray-400 text-center mb-6">Masukkan data mobil untuk memprediksi harga</p>

    <div id="message-box" class="hidden mb-4 p-3 rounded-lg text-sm"></div>

    <form id="predict-form" class="grid grid-cols-1 md:grid-cols-2 gap-4">

        <!-- Float fields -->
        <input type="number" step="0.01" name="wheelbase" placeholder="Wheelbase" required class="input-field">
        <input type="number" step="0.01" name="carlength" placeholder="Car Length" required class="input-field">
        <input type="number" step="0.01" name="carwidth" placeholder="Car Width" required class="input-field">
        <input type="number" step="0.01" name="curbweight" placeholder="Curb Weight" required class="input-field">
        <input type="number" step="0.01" name="enginesize" placeholder="Engine Size" required class="input-field">
        <input type="number" step="0.01" name="boreratio" placeholder="Bore Ratio" required class="input-field">
        <input type="number" step="0.01" name="horsepower" placeholder="Horsepower" required class="input-field">
        <input type="number" step="0.01" name="citympg" placeholder="City MPG" required class="input-field">
        <input type="number" step="0.01" name="highwaympg" placeholder="Highway MPG" required class="input-field">

        <!-- String fields -->
        <input type="text" name="CompanyName" placeholder="Company Name" required class="input-field">

        <!-- Literals -->
        <select name="fueltype" required class="input-field">
            <option value="">Fuel Type</option>
            <option value="gas">Gas</option>
            <option value="diesel">Diesel</option>
        </select>

        <select name="aspiration" required class="input-field">
            <option value="">Aspiration</option>
            <option value="std">Standard</option>
            <option value="turbo">Turbo</option>
        </select>

        <select name="doornumber" required class="input-field">
            <option value="">Door Number</option>
            <option value="two">Two</option>
            <option value="four">Four</option>
        </select>

        <select name="carbody" required class="input-field">
            <option value="">Car Body</option>
            <option value="sedan">Sedan</option>
            <option value="hatchback">Hatchback</option>
            <option value="wagon">Wagon</option>
            <option value="hardtop">Hardtop</option>
            <option value="convertible">Convertible</option>
        </select>

        <select name="drivewheel" required class="input-field">
            <option value="">Drive Wheel</option>
            <option value="fwd">FWD</option>
            <option value="rwd">RWD</option>
            <option value="awd">AWD</option>
        </select>

        <select name="enginetype" required class="input-field">
            <option value="">Engine Type</option>
            <option value="ohc">OHC</option>
            <option value="ohcf">OHCF</option>
            <option value="ohcv">OHCV</option>
            <option value="dohc">DOHC</option>
            <option value="l">L</option>
            <option value="rotor">Rotor</option>
            <option value="dohcv">DOHCV</option>
        </select>

        <select name="cylindernumber" required class="input-field">
            <option value="">Cylinder Number</option>
            <option value="four">Four</option>
            <option value="six">Six</option>
            <option value="five">Five</option>
            <option value="eight">Eight</option>
            <option value="two">Two</option>
            <option value="twelve">Twelve</option>
            <option value="three">Three</option>
        </select>

        <select name="fuelsystem" required class="input-field">
            <option value="">Fuel System</option>
            <option value="mpfi">MPFI</option>
            <option value="2bbl">2BBL</option>
            <option value="idi">IDI</option>
            <option value="1bbl">1BBL</option>
            <option value="spdi">SPDI</option>
            <option value="4bbl">4BBL</option>
            <option value="mfi">MFI</option>
            <option value="spfi">SPFI</option>
        </select>

        <div class="md:col-span-2">
            <button type="submit" class="w-full bg-teal-500 text-white font-bold py-2 px-4 rounded-lg hover:bg-teal-600 transition duration-300">
                Predict
            </button>
        </div>
    </form>

    <div id="result-box" class="mt-6 hidden bg-gray-700 p-4 rounded-lg">
        <h2 class="text-xl font-semibold text-teal-400 mb-2">Hasil Prediksi</h2>
        <p id="predicted-price" class="text-lg"></p>
        <p id="price-segment" class="text-lg"></p>
        <p id="model-info" class="text-sm text-gray-400"></p>
    </div>
</div>

<script>
    // Style helper
    document.querySelectorAll('.input-field').forEach(el => {
        el.classList.add('w-full', 'px-4', 'py-2', 'bg-gray-700', 'border', 'border-gray-600', 'rounded-lg', 'focus:ring-2', 'focus:ring-teal-500', 'text-white');
    });

    // Cek token
    const token = localStorage.getItem("access_token");
    if (!token) {
        alert("Token tidak ditemukan! Silakan generate token terlebih dahulu.");
        window.location.href = "/token-dashboard";
    }

    document.getElementById('predict-form').addEventListener('submit', async (e) => {
        e.preventDefault();

        const formData = new FormData(e.target);
        const data = {};
        formData.forEach((value, key) => {
            // Number field harus dikonversi
            if (!isNaN(value) && value.trim() !== "") {
                data[key] = parseFloat(value);
            } else {
                data[key] = value;
            }
        });

        try {
            const res = await fetch('/predict', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + token
                },
                body: JSON.stringify(data)
            });

            const result = await res.json();

            if (!res.ok) {
                throw new Error(result.detail || "Prediksi gagal");
            }

            document.getElementById('predicted-price').textContent = "Predicted Price: " + result.predicted_price;
            document.getElementById('price-segment').textContent = "Price Segment: " + result.price_segment;
            document.getElementById('model-info').textContent = "Model: " + result.model_name + " v" + result.model_version;

            document.getElementById('result-box').classList.remove('hidden');
            showMessage("Prediksi berhasil!", "success");
        } catch (err) {
            console.error(err);
            showMessage(err.message, "error");
        }
    });

    function showMessage(msg, type) {
        const box = document.getElementById('message-box');
        box.textContent = msg;
        box.classList.remove('hidden', 'bg-green-500', 'bg-red-500');
        box.classList.add(type === 'success' ? 'bg-green-500' : 'bg-red-500');
    }
</script>

</body>
</html>
